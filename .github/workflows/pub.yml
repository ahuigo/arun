# refer https://github.com/cosmtrek/air/blob/master/.github/workflows/release.yml
name: release arun cli command
on: [push]
  #on:  
  #  push:
  #    tags:
  #      - '*'
  #    #tags-ignore:
  #    #  - '2.*'
#  push:
#    branches:
#    - master
#    - staging
#  pull_request:
#    branches:
#    - master
#    - staging
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    #if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
      - name: set GOVERSION
        run: echo "GOVERSION=$(go version | sed -r 's/go version go(.*)\ .*/\1/')" >> $GITHUB_ENV
      - name: set ArunVersion
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: show version
        run: echo ${{ env.GOVERSION }} ${{ env.VERSION }}
      - name: run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.CICD_TOKEN }}

  docker:
    uses: ahuigo/arun/.github/workflows/docker.yml
    #uses: ./docker.yml
    with: 
      run_on: ubuntu-latest

  unittest:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v2
      - name: setup Go 1.17
        id: go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
      - name: build
        run: make build
      - name: run Unit tests.
        run: go test  ./... -v -covermode=count -coverprofile=coverage.txt
      - name: upload Coverage report to CodeCov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          verbose: true
